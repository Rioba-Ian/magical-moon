---
interface Props {
 title: string;
}

const { title } = Astro.props;

import { ViewTransitions } from "astro:transitions";
---

<!doctype html>
<html lang="en">
 <head>
  <meta charset="UTF-8" />
  <meta name="description" content="Astro description" />
  <meta name="viewport" content="width=device-width" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link
   href="https://fonts.googleapis.com/css2?family=Barlow+Condensed:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Barlow:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Bellefair&display=swap"
   rel="stylesheet"
  />
  <meta name="generator" content={Astro.generator} />
  <title>{title}</title>
  <ViewTransitions />
 </head>
 <body class="bg-dark">
  <slot />
 </body>
</html>
<style is:global>
 @tailwind utilities;
 @tailwind components;
 @tailwind base;

 @layer base {
  :root {
   --accent: 136, 58, 234;
   --accent-light: 224, 204, 250;
   --accent-dark: 49, 10, 101;
   --accent-gradient: linear-gradient(
    45deg,
    rgb(var(--accent)),
    rgb(var(--accent-light)) 30%,
    white 60%
   );

   --clr-dark: 230, 35%, 7%;
   --clr-light: 231, 77%, 90%;
   --clr-white: 0, 0%, 100%;

   /* font-sizes */
   --fs-900: 9.375rem;
   --fs-800: 6.25rem;
   --fs-700: 3.5rem;
   --fs-600: 2rem;
   --fs-500: 1.75rem;
   --fs-400: 1.125rem;
   --fs-300: 1rem;
   --fs-200: 0.875rem;

   /* font-families */
   --ff-serif: "Bellefair", serif;
   --ff-sans-cond: "Barlow Condensed", sans-serif;
   --ff-sans-normal: "Barlow", sans-serif;
  }
 }
 @layer utilities {
  .bg-dark {
   background-color: hsl(var(--clr-dark));
  }

  .bg-accent {
   background-color: hsl(var(--clr-light));
  }

  .bg-white {
   background-color: hsl(var(--clr-white));
  }

  .text-dark {
   color: hsl(var(--clr-dark));
  }

  .text-accent {
   color: hsl(var(--clr-light));
  }

  .text-white {
   color: hsl(var(--clr-white));
  }

  .font-serif {
   font-family: var(--ff-serif);
  }

  .font-sans-cond {
   font-family: var(--ff-sans-cond);
  }

  .font-sans-normal {
   font-family: var(--ff-sans-serif);
  }

  .fs-900 {
   @apply text-[var(--fs-900)];
  }
  .fs-800 {
   font-size: var(--fs-800);
  }
  .fs-700 {
   font-size: var(--fs-700);
  }
  .fs-600 {
   font-size: var(--fs-600);
  }
  .fs-500 {
   font-size: var(--fs-500);
  }
  .fs-400 {
   font-size: var(--fs-400);
  }
  .fs-300 {
   font-size: var(--fs-300);
  }
  .fs-200 {
   font-size: var(--fs-200);
  }
 }
 html {
  background-color: hsl(var(--clr-dark));
  min-height: 100vh;
 }
 body {
  font-family: var(--ff-sans-normal);
  font-size: var(--fs-400);
  color: hsl(var(--clr-white));

  @apply min-h-screen;
 }

 /* Box sizing */
 *,
 *::before,
 *::after {
  box-sizing: border-box;
  margin: 0;
 }

 /* Reset margins */
 body,
 h1,
 h2,
 h3,
 h4,
 h5,
 p,
 figure,
 picture {
  margin: 0;
 }

 img,
 picture {
  max-width: 100%;
  display: block;
 }

 input,
 button,
 textarea,
 select {
  font: inherit;
 }

 .fs-900,
 .fs-800,
 .fs-700,
 .fs-600 {
  line-height: 1.1;
 }

 @media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
   animation-duration: 0.01ms !important;
   animation-iteration-count: 1 !important;
   transition-duration: 0.01ms !important;
   scroll-behavior: auto !important;
  }

  [aria-selected="true"] {
   color: hsl(var(--clr-light));
   border-color: hsl(var(--clr-white));
  }
 }
</style>

<script>
 document.addEventListener("astro:after-swap", () => {
  console.log("return something....");
 });

 const updateActiveLink = () => {
  console.log("loaded.");

  console.log(window.location.pathname, "window.location.pathname;");

  const links = document.querySelectorAll("#primary-navigation a");
  console.log(links, "links");

  links.forEach((link) => {
   if (link.getAttribute("href") === window.location.pathname) {
    link.classList.add("current");
   } else {
    link.classList.remove("current");
   }
  });
 };

 document.addEventListener("astro:after-swap", () => updateActiveLink());
</script>
